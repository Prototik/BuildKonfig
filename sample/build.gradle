apply plugin: 'org.jetbrains.kotlin.multiplatform'
apply plugin: 'com.codingfeline.buildkonfig'

buildscript {
    repositories {
        // Use 'gradle install' to install latest
        maven { url "file://${projectDir.absolutePath}/../build/localMaven" }
        mavenLocal()
        mavenCentral()
    }

    dependencies {
        classpath 'org.jetbrains.kotlin:kotlin-gradle-plugin:1.5.31'
        classpath 'com.codingfeline.buildkonfig:buildkonfig-gradle-plugin:+'
    }
}

allprojects {
    repositories {
        mavenCentral()
    }
}

kotlin {
    jvm {}
    js(IR) {
        browser()
    }
    js("node") {
        nodejs()
    }
    ios()
    macosX64()
    linuxX64()
    mingwX64()

    /**
     * - commonMain
     *   - appMain
     *     - jvmMain
     *     - desktopMain
     *       - macosX64Main
     *       - linuxX64Main
     *       - mingwX64Main
     *   - jsCommonMain
     *     - jsMain
     *     - nodeMain
     *   - iosMain
     *     - iosArm64Main
     *     - iosX64Main
     */
    sourceSets {
        commonMain {}
        commonTest {}

        appMain {
            dependsOn(commonMain)
        }

        jvmMain {
            dependsOn(appMain)
        }

        desktopMain {
            dependsOn(appMain)
        }

        macosX64Main {
            dependsOn(desktopMain)
        }
        linuxX64Main {
            dependsOn(desktopMain)
        }
        mingwX64Main {
            dependsOn(desktopMain)
        }

        jsCommonMain {
            dependsOn(commonMain)
        }
        jsMain {
            dependsOn(jsCommonMain)
        }
        nodeMain {
            dependsOn(jsCommonMain)
        }
    }
}

buildkonfig {
    packageName = 'com.codingfeline.buildkonfigsample'

    defaultConfigs {
        buildConfigField 'STRING', 'test', 'testvalue'
        buildConfigField 'STRING', 'target', 'common'
    }

    targetConfigs {
        jvm {
            buildConfigField 'STRING', 'target', 'jvm'
        }
        // KMP plugin internally creates iosArm64 and iosX64 targets
        // when we use `ios()`. So we need to configure both targets.
        ios {
            buildConfigField 'STRING', 'target', 'ios'
        }
        desktop {
            buildConfigField 'STRING', 'desktopvalue', 'desktop'
        }
        jsCommon {
            buildConfigField 'STRING', 'target', 'jsCommon'
        }
    }
}
